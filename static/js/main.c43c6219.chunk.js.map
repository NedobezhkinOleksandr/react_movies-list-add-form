{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","advancedValidation","test","urlInput","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","isDisabled","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","newMovie","prevValue","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"iSAQaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,eAAA,OAAKC,UAAU,OAAO,UAAQ,aAAYC,SAAA,CACxCC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,gBAAeC,SAC/BC,cAAA,OACEC,IAAKL,EAAMM,OACXC,IAAI,kBAIVN,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,iBAAgBC,SAChCC,cAAA,OACEC,IAAI,wBACJE,IAAI,aAIVH,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,aAAYC,SAAEH,EAAMQ,aAIrCP,eAAA,OAAKC,UAAU,UAASC,SAAA,CACrBH,EAAMS,YACPL,cAAA,SACAA,cAAA,KAAGM,KAAMV,EAAMW,QAAQR,SAAC,iBAGxB,EC7BKS,EAA8B,SAAHb,GAAA,IAAMc,EAAMd,EAANc,OAAM,OAClDT,cAAA,OAAKF,UAAU,SAAQC,SACpBU,EAAOC,KAAI,SAAAd,GAAK,OACfI,cAACN,EAAS,CAERE,MAAOA,GADFA,EAAMe,OAEX,KAEA,E,gBCHD,IAAMC,EAA6B,SAAHjB,GAMhC,IALLkB,EAAIlB,EAAJkB,KACAC,EAAKnB,EAALmB,MAAKC,EAAApB,EACLqB,aAAK,IAAAD,EAAGF,EAAIE,EAAAE,EAAAtB,EACZuB,gBAAQ,IAAAD,GAAQA,EAAAE,EAAAxB,EAChByB,gBAAQ,IAAAD,EAAG,WAAO,EAACA,EAEnBE,EAAaC,oBAAS,oBAAAC,OAASV,EAAI,KAAAU,OAV5BC,KAAKC,SAASC,WAAWC,MAAM,GAUkB,IAAjDC,EAAoDC,YAAAR,EAAA,GAAlD,GACTS,EAA8BR,oBAAS,GAAMS,EAAAF,YAAAC,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAWF,GAAWd,IAAaJ,EAKnCqB,GAFU,uKAEoBC,KAAKtB,IAAUA,EAC7CuB,EAAoB,WAATxB,GAA8B,YAATA,EAEtC,OACEhB,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,SAAOF,UAAU,QAAQwC,QAASV,EAAG7B,SAClCiB,IAGHhB,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,SACE4B,GAAIA,EACJ,mBAAAL,OAAkBV,GAClBf,UAAWyC,IAAW,QAAS,CAC7B,YAAaL,IAEfM,KAAK,OACLC,YAAW,SAAAlB,OAAWP,GACtBF,MAAOA,EACPM,SAAU,SAAAsB,GAAK,OAAItB,EAASsB,EAAMC,OAAO7B,MAAM,EAC/C8B,OAAQ,kBAAMX,GAAW,EAAK,MAIjCC,GACClC,cAAA,KAAGF,UAAU,iBAAgBC,SAAA,GAAAwB,OAAKP,EAAK,kBAGvCqB,GAAYF,GACTnC,cAAA,KAAGF,UAAU,iBAAgBC,SAAA,GAAAwB,OAAKP,EAAK,mCAGlD,ECrDa6B,EAA4B,SAAHlD,GAAmB,IAAbmD,EAAKnD,EAALmD,MAC1CzB,EAA0BC,mBAAS,GAAEyB,EAAAlB,YAAAR,EAAA,GAA9B2B,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBjB,EAA0BR,mBAAS,IAAGS,EAAAF,YAAAC,EAAA,GAA/B1B,EAAK2B,EAAA,GAAEmB,EAAQnB,EAAA,GACtBoB,EAAsC7B,mBAAS,IAAG8B,EAAAvB,YAAAsB,EAAA,GAA3C9C,EAAW+C,EAAA,GAAEC,EAAcD,EAAA,GAClCE,EAA4BhC,mBAAS,IAAGiC,EAAA1B,YAAAyB,EAAA,GAAjCpD,EAAMqD,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAA8BnC,mBAAS,IAAGoC,EAAA7B,YAAA4B,EAAA,GAAnClD,EAAOmD,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,EAA4BtC,mBAAS,IAAGuC,EAAAhC,YAAA+B,EAAA,GAAjCjD,EAAMkD,EAAA,GAAEC,EAASD,EAAA,GAuBlBE,IACJxD,GACGL,GACAS,GAGL,OACEd,eAAA,QACEC,UAAU,WAEVkE,SA/Ba,SAACtB,GAChBA,EAAMuB,iBAEF7D,GAASO,GAAUJ,GAAWL,IAChC4C,EAAM,CACJ1C,QACAC,cACAH,SACAK,UACAI,WAGFsC,GAAS,SAAAiB,GAAS,OAAIA,EAAY,CAAC,IACnChB,EAAS,IACTG,EAAe,IACfG,EAAU,IACVG,EAAW,IACXG,EAAU,IAEd,EAYuB/D,SAAA,CAEnBC,cAAA,MAAIF,UAAU,QAAOC,SAAC,gBAEtBC,cAACY,EAAS,CACRC,KAAK,QACLG,MAAM,QACNF,MAAOV,EACPgB,SAAU8B,EACVhC,UAAQ,IAGVlB,cAACY,EAAS,CACRC,KAAK,cACLG,MAAM,cACNF,MAAOT,EACPe,SAAUiC,IAGZrD,cAACY,EAAS,CACRC,KAAK,SACLG,MAAM,YACNF,MAAOZ,EACPkB,SAAUoC,EACVtC,UAAQ,IAGVlB,cAACY,EAAS,CACRC,KAAK,UACLG,MAAM,WACNF,MAAOP,EACPa,SAAUuC,EACVzC,UAAQ,IAGVlB,cAACY,EAAS,CACRC,KAAK,SACLG,MAAM,UACNF,MAAOH,EACPS,SAAU0C,EACV5C,UAAQ,IAGVlB,cAAA,OAAKF,UAAU,mBAAkBC,SAC/BC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACEwC,KAAK,SACL,UAAQ,gBACR1C,UAAU,iBACVqE,SAAUJ,EAAWhE,SACtB,cAnDAiD,EA0DX,E,OCjGaoB,EAAM,WACjB,IAAA/C,EAA4BC,mBAAS+C,GAAiBtB,EAAAlB,YAAAR,EAAA,GAA/CZ,EAAMsC,EAAA,GAAEuB,EAASvB,EAAA,GAgBxB,OACElD,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACQ,EAAU,CAACC,OAAQA,MAGtBT,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAC6C,EAAQ,CAACC,MArBE,SAChBlD,GAEA,IAAM2E,EAAW,CACfnE,MAAOR,EAAMQ,MACbC,YAAaT,EAAMS,YACnBH,OAAQN,EAAMM,OACdK,QAASX,EAAMW,QACfI,OAAQf,EAAMe,QAGhB2D,GAAU,SAAAE,GAAS,SAAAjD,OAAAkD,YAAQD,GAAS,CAAED,GAAW,GACnD,QAaF,EC/BAG,IAASC,OAAO3E,cAACoE,EAAG,IAAKQ,SAASC,eAAe,Q","file":"static/js/main.c43c6219.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const advancedValidation = !pattern.test(value) && value;\n  const urlInput = name === 'imgUrl' || name === 'imdbUrl';\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {(urlInput && advancedValidation)\n        && <p className=\"help is-danger\">{`${label} doesn't match the url type`}</p>}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd(movie: Movie): void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title && imdbId && imdbUrl && imgUrl) {\n      onAdd({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      setCount(prevCount => prevCount + 1);\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n    }\n  };\n\n  const isDisabled = !(\n    imdbUrl\n    && imgUrl\n    && imdbId\n  );\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={onSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovies = (\n    movie: Movie,\n  ) => {\n    const newMovie = {\n      title: movie.title,\n      description: movie.description,\n      imgUrl: movie.imgUrl,\n      imdbUrl: movie.imdbUrl,\n      imdbId: movie.imdbId,\n    };\n\n    setMovies(prevValue => [...prevValue, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}